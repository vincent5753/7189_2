embed-server --server-config=standalone.xml

/subsystem=security:remove
/core-service=management/security-realm=ApplicationRealm:remove

/subsystem=elytron/filesystem-realm=KieRealm:add(path=kie-fs-realm-users, relative-to=jboss.server.config.dir)
/subsystem=elytron/simple-role-decoder=from-roles-attribute:add(attribute=role)

/subsystem=elytron/security-domain=ApplicationDomain:list-add(name=realms, index=0, value={realm=KieRealm, role-decoder=from-roles-attribute})
/subsystem=elytron/security-domain=ApplicationDomain:write-attribute(name=default-realm, value=KieRealm)
/subsystem=elytron/security-domain=ApplicationDomain:write-attribute(name=permission-mapper, value=default-permission-mapper)

/subsystem=ee/service=default-bindings/:write-attribute(name="jms-connection-factory", value="java:jboss/DefaultJMSConnectionFactory")

/subsystem=elytron/sasl-authentication-factory=application-sasl-authentication:remove
/subsystem=elytron/sasl-authentication-factory=application-sasl-authentication:add(sasl-server-factory=configured,security-domain=ApplicationDomain,mechanism-configurations=[{mechanism-name=DIGEST-MD5,mechanism-realm-configurations=[{realm-name=KieRealm}]}])

/subsystem=elytron/permission-set=security-domain-permission:add( permissions=[ { class-name=org.wildfly.security.permission.ElytronPermission, target-name=getSecurityDomain } ] )

/subsystem=elytron/simple-permission-mapper=default-permission-mapper:list-add(name=permission-mappings[1].permission-sets,index=1,value={permission-set="security-domain-permission"})

/subsystem=undertow/server=default-server/https-listener=https:remove
/subsystem=undertow/server=default-server/https-listener=https:add( socket-binding=https, security-realm=KieRealm, enable-http2=true )
/subsystem=undertow/application-security-domain=other:add(security-domain=ApplicationDomain)
/subsystem=undertow/server=default-server/host=default-host/setting=http-invoker:remove
/subsystem=undertow/server=default-server/host=default-host/setting=http-invoker:add(security-realm=KieRealm)

/subsystem=elytron/http-authentication-factory=application-http-authentication:add(http-server-mechanism-factory=global,security-domain=ApplicationDomain,mechanism-configurations=[{mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=KieRealm}]}, {mechanism-name=FORM}])

/subsystem=ejb3/service=remote:remove
/subsystem=ejb3/application-security-domain=other:add(security-domain=ApplicationDomain)

/core-service=management/security-realm=KieRealm:add()
/core-service=management/security-realm=KieRealm/server-identity=ssl:add(keystore-relative-to=jboss.server.config.dir, keystore-password=password)

/subsystem=remoting/http-connector=http-remoting-connector:remove
/subsystem=remoting/http-connector=http-remoting-connector:add(connector-ref=default, security-realm=KieRealm)

/subsystem=distributable-web:remove

/subsystem=infinispan:remove

if (outcome != success) of /system-property=org.kie.demo:read-resource
	/system-property=org.kie.server.id:add(value="${org.kie.demo:true}")
else
    /system-property=org.kie.demo:write-attribute(name=value,value="${org.kie.demo:true}")
end-if

if (outcome != success) of /system-property=org.kie.example:read-resource
	/system-property=org.kie.example:add(value="${org.kie.example:true}")
else
    /system-property=org.kie.example:write-attribute(name=value,value="${org.kie.example:true}")
end-if

if (outcome != success) of /system-property=org.jbpm.designer.perspective:read-resource
	/system-property=org.jbpm.designer.perspective:add(value="${org.jbpm.designer.perspective:full}")
else
    /system-property=org.jbpm.designer.perspective:write-attribute(name=value,value="${org.jbpm.designer.perspective:full}")
end-if

if (outcome != success) of /system-property=designerdataobjects:read-resource
	/system-property=designerdataobjects:add(value="${designerdataobjects:false}")
else
    /system-property=designerdataobjects:write-attribute(name=value,value="${designerdataobjects:false}")
end-if

if (outcome != success) of /system-property=org.uberfire.nio.git.ssh.host:read-resource
	/system-property=org.uberfire.nio.git.ssh.host:add(value="0.0.0.0")
else
    /system-property=org.uberfire.nio.git.ssh.host:write-attribute(name=value,value="0.0.0.0")
end-if

if (outcome != success) of /system-property=appformer.experimental.features:read-resource
	/system-property=appformer.experimental.features:add(value="true")
else
    /system-property=appformer.experimental.features:write-attribute(name=value,value="true")
end-if

# Make GIT repositories root directory at /opt/jboss/wildfly/mygit.
# if (outcome != success) of /system-property=org.uberfire.nio.git.dir:read-resource
# 	/system-property=org.uberfire.nio.git.dir:add(value="/opt/jboss/wildfly/mygit")
# else
#     /system-property=org.uberfire.nio.git.dir:write-attribute(name=value,value="/opt/jboss/wildfly/mygit")
# end-if

stop-embedded-server